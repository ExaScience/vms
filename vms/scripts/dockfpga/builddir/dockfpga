#!/usr/bin/env bash

IMAGE=dockfpga

USER_IDS=(-e BUILDER_UID="$( id -u )" -e BUILDER_GID="$( id -g )" -e BUILDER_USER="$( id -un )" -e BUILDER_GROUP="$( id -gn )")

HOST_PWD=$PWD
[ -L $HOST_PWD ] && HOST_PWD=$(readlink $HOST_PWD)

ARGS+=" -v $HOST_PWD:/work"
ARGS+=" -w $HOST_PWD"

#------------------------------------------------------------------------------
# Now, finally, run the command in a container
#
CONTAINER_NAME=dockcross_$RANDOM
docker run -ti --name $CONTAINER_NAME \
    "${USER_IDS[@]}" \
    $ARGS \
    $IMAGE "$@"
run_exit_code=$?

# Attempt to delete container
rm_output=$(docker rm -f $CONTAINER_NAME 2>&1)
rm_exit_code=$?
if [[ $rm_exit_code != 0 ]]; then
    echo "$rm_output"
    exit $rm_exit_code
fi

exit $run_exit_code

################################################################################
#
# This image is not intended to be run manually.
#
# To create a dockfpga helper script for the
# dockfpga/linux-armv7 image, run:
#
# docker run --rm dockfpga/linux-armv7 > dockfpga-linux-armv7
# chmod +x dockfpga-linux-armv7
#
# You may then wish to move the dockfpga script to your PATH.
#
################################################################################
